<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BERT深度学习环境搭建</title>
    <url>/library.github.io/posts/28085/</url>
    <content><![CDATA[<img src="https://" alt="" style="width:100%" />  

<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><span id="more"></span>

<h2 id="0x01-环境准备"><a href="#0x01-环境准备" class="headerlink" title="0x01 环境准备"></a>0x01 环境准备</h2><ol>
<li><p>查看系统位数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(base) [dengzhe@localhost ~]$ uname -a</span><br><span class="line">Linux localhost.localdomain 3.10.0-862.el7.x86_64 <span class="comment">#1 SMP Fri Apr 20 16:44:24 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure></li>
<li><p>查看linux发行版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(base) [dengzhe@localhost ~]$ cat /etc/centos-release</span><br><span class="line">CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure></li>
<li><p>查看显卡信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(base) [dengzhe@localhost ~]$ lspci  | grep -i vga</span><br><span class="line">00:0f.0 VGA compatible controller: VMware SVGA II Adapter</span><br><span class="line">0b:00.0 VGA compatible controller: NVIDIA Corporation TU104 [GeForce RTX 2080 SUPER] (rev a1)</span><br></pre></td></tr></table></figure>

<ul>
<li><input disabled="" type="checkbox"> 64位系统</li>
<li><input disabled="" type="checkbox"> CentOS7</li>
<li><input disabled="" type="checkbox"> RTX 2080显卡</li>
</ul>
</li>
</ol>
<h2 id="0x02-安装Anaconda-miniconda"><a href="#0x02-安装Anaconda-miniconda" class="headerlink" title="0x02 安装Anaconda/miniconda"></a>0x02 安装Anaconda/miniconda</h2><h2 id="0x03-安装CUDA和cuDNN"><a href="#0x03-安装CUDA和cuDNN" class="headerlink" title="0x03 安装CUDA和cuDNN"></a>0x03 安装CUDA和cuDNN</h2><p>安装CUDA和cuDNN之前需要确认Tensorflow，CUDA以及cuDNN的版本是否适配。具体对应关系可以从官网查询。由于bert-as-service尚不支持tensorflow_gpu-1.15.0以上的版本，所以我们选择tensorflow_gpu-1.15.0。</p>
<table>
<thead>
<tr>
<th align="left">版本</th>
<th align="left">Python 版本</th>
<th align="left">编译器</th>
<th align="left">构建工具</th>
<th align="left">cuDNN</th>
<th align="left">CUDA</th>
</tr>
</thead>
<tbody><tr>
<td align="left">tensorflow-2.4.0</td>
<td align="left">3.6-3.8</td>
<td align="left">GCC 7.3.1</td>
<td align="left">Bazel 3.1.0</td>
<td align="left">8.0</td>
<td align="left">11.0</td>
</tr>
<tr>
<td align="left">tensorflow-2.3.0</td>
<td align="left">3.5-3.8</td>
<td align="left">GCC 7.3.1</td>
<td align="left">Bazel 3.1.0</td>
<td align="left">7.6</td>
<td align="left">10.1</td>
</tr>
<tr>
<td align="left">tensorflow-2.2.0</td>
<td align="left">3.5-3.8</td>
<td align="left">GCC 7.3.1</td>
<td align="left">Bazel 2.0.0</td>
<td align="left">7.6</td>
<td align="left">10.1</td>
</tr>
<tr>
<td align="left">tensorflow-2.1.0</td>
<td align="left">2.7、3.5-3.7</td>
<td align="left">GCC 7.3.1</td>
<td align="left">Bazel 0.27.1</td>
<td align="left">7.6</td>
<td align="left">10.1</td>
</tr>
<tr>
<td align="left">tensorflow-2.0.0</td>
<td align="left">2.7、3.3-3.7</td>
<td align="left">GCC 7.3.1</td>
<td align="left">Bazel 0.26.1</td>
<td align="left">7.4</td>
<td align="left">10.0</td>
</tr>
<tr>
<td align="left"><strong>tensorflow_gpu-1.15.0</strong></td>
<td align="left"><strong>2.7、3.3-3.7</strong></td>
<td align="left"><strong>GCC 7.3.1</strong></td>
<td align="left"><strong>Bazel 0.26.1</strong></td>
<td align="left"><strong>7.4</strong></td>
<td align="left"><strong>10.0</strong></td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.14.0</td>
<td align="left">2.7、3.3-3.7</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.24.1</td>
<td align="left">7.4</td>
<td align="left">10.0</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.13.1</td>
<td align="left">2.7、3.3-3.7</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.19.2</td>
<td align="left">7.4</td>
<td align="left">10.0</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.12.0</td>
<td align="left">2.7、3.3-3.6</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.15.0</td>
<td align="left">7</td>
<td align="left">9</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.11.0</td>
<td align="left">2.7、3.3-3.6</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.15.0</td>
<td align="left">7</td>
<td align="left">9</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.10.0</td>
<td align="left">2.7、3.3-3.6</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.15.0</td>
<td align="left">7</td>
<td align="left">9</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.9.0</td>
<td align="left">2.7、3.3-3.6</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.11.0</td>
<td align="left">7</td>
<td align="left">9</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.8.0</td>
<td align="left">2.7、3.3-3.6</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.10.0</td>
<td align="left">7</td>
<td align="left">9</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.7.0</td>
<td align="left">2.7、3.3-3.6</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.9.0</td>
<td align="left">7</td>
<td align="left">9</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.6.0</td>
<td align="left">2.7、3.3-3.6</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.9.0</td>
<td align="left">7</td>
<td align="left">9</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.5.0</td>
<td align="left">2.7、3.3-3.6</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.8.0</td>
<td align="left">7</td>
<td align="left">9</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.4.0</td>
<td align="left">2.7、3.3-3.6</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.5.4</td>
<td align="left">6</td>
<td align="left">8</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.3.0</td>
<td align="left">2.7、3.3-3.6</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.4.5</td>
<td align="left">6</td>
<td align="left">8</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.2.0</td>
<td align="left">2.7、3.3-3.6</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.4.5</td>
<td align="left">5.1</td>
<td align="left">8</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.1.0</td>
<td align="left">2.7、3.3-3.6</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.4.2</td>
<td align="left">5.1</td>
<td align="left">8</td>
</tr>
<tr>
<td align="left">tensorflow_gpu-1.0.0</td>
<td align="left">2.7、3.3-3.6</td>
<td align="left">GCC 4.8</td>
<td align="left">Bazel 0.4.2</td>
<td align="left">5.1</td>
<td align="left">8</td>
</tr>
</tbody></table>
<ul>
<li><input disabled="" type="checkbox"> CUDA10.0</li>
<li><input disabled="" type="checkbox"> cuDNN7.4</li>
<li><input disabled="" type="checkbox"> tensorflow_gpu-1.15.0</li>
</ul>
<h3 id="1-安装CUDA"><a href="#1-安装CUDA" class="headerlink" title="1.安装CUDA"></a>1.安装CUDA</h3><p>CUDA 是英伟达发明的并行计算平台和编程模型。通过利用图形处理单元 (GPU) 的强大功能，它可以显着提高计算性能。按照官方文档完成CUDA安装</p>
<p><img src="image-20210616151339956.png" alt="image-20210616151339956"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Do you accept the previously <span class="built_in">read</span> EULA?</span><br><span class="line">accept/decline/quit: accept            </span><br><span class="line"></span><br><span class="line">Install NVIDIA Accelerated Graphics Driver <span class="keyword">for</span> Linux-x86_64 410.48?</span><br><span class="line">(y)es/(n)o/(q)uit: n</span><br><span class="line"></span><br><span class="line">Install the CUDA 10.0 Toolkit?</span><br><span class="line">(y)es/(n)o/(q)uit: y</span><br><span class="line"></span><br><span class="line">Enter Toolkit Location</span><br><span class="line"> [ default is /usr/<span class="built_in">local</span>/cuda-10.0 ]: </span><br><span class="line"></span><br><span class="line">Do you want to install a symbolic link at /usr/<span class="built_in">local</span>/cuda?</span><br><span class="line">(y)es/(n)o/(q)uit: y</span><br><span class="line"></span><br><span class="line">Install the CUDA 10.0 Samples?</span><br><span class="line">(y)es/(n)o/(q)uit: y</span><br><span class="line"></span><br><span class="line">Enter CUDA Samples Location</span><br><span class="line"> [ default is /home/dengzhe ]: </span><br><span class="line"></span><br><span class="line">Installing the CUDA Toolkit <span class="keyword">in</span> /usr/<span class="built_in">local</span>/cuda-10.0 ...</span><br><span class="line">Missing recommended library: libGLU.so</span><br><span class="line">Missing recommended library: libXi.so</span><br><span class="line">Missing recommended library: libXmu.so</span><br><span class="line">Missing recommended library: libGL.so</span><br><span class="line"></span><br><span class="line">Installing the CUDA Samples <span class="keyword">in</span> /home/dengzhe ...</span><br><span class="line">Copying samples to /home/dengzhe/NVIDIA_CUDA-10.0_Samples now...</span><br><span class="line">Finished copying samples.</span><br><span class="line"></span><br><span class="line">===========</span><br><span class="line">= Summary =</span><br><span class="line">===========</span><br><span class="line"></span><br><span class="line">Driver:   Not Selected</span><br><span class="line">Toolkit:  Installed <span class="keyword">in</span> /usr/<span class="built_in">local</span>/cuda-10.0</span><br><span class="line">Samples:  Installed <span class="keyword">in</span> /home/dengzhe, but missing recommended libraries</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/cuda-10.0/bin<span class="variable">$&#123;PATH:+:<span class="variable">$&#123;PATH&#125;</span>&#125;</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/usr/<span class="built_in">local</span>/cuda-10.0/lib64<span class="variable">$&#123;LD_LIBRARY_PATH:+:<span class="variable">$&#123;LD_LIBRARY_PATH&#125;</span>&#125;</span></span><br></pre></td></tr></table></figure>



<h3 id="2-安装cuDNN"><a href="#2-安装cuDNN" class="headerlink" title="2.安装cuDNN"></a>2.安装cuDNN</h3><p>想要安装cuDNN需要先注册成为NVIDIA developer</p>
<h2 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bert-serving-start -model_dir ~/models/chinese_L-12_H-768_A-12/ -num_worker=4 -http_port 8081</span><br><span class="line"></span><br><span class="line">watch -n 0.5 nvidia-smi</span><br></pre></td></tr></table></figure>




<hr />
版权信息]]></content>
  </entry>
  <entry>
    <title>学习路径图</title>
    <url>/library.github.io/posts/22874/</url>
    <content><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p><img src="intro.png" alt="backend"><br>Roadmap to becoming a web developer in 2021</p>
<span id="more"></span>

<h2 id="0x01-后端学习路径图"><a href="#0x01-后端学习路径图" class="headerlink" title="0x01 后端学习路径图"></a>0x01 后端学习路径图</h2><p><img src="backend.png" alt="backend"></p>
<h2 id="0x02-前端学习路径图"><a href="#0x02-前端学习路径图" class="headerlink" title="0x02 前端学习路径图"></a>0x02 前端学习路径图</h2><p><img src="frontend.png" alt="backend"></p>
<h2 id="0x03-附录"><a href="#0x03-附录" class="headerlink" title="0x03 附录"></a>0x03 附录</h2><p><a href="https://github.com/kamranahmedse/developer-roadmap">GitHub地址</a></p>
<hr />]]></content>
      <categories>
        <category>开源项目</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>学习路径</tag>
      </tags>
  </entry>
</search>
